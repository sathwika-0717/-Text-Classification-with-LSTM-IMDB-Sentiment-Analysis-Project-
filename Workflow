Sentiment Analysis on IMDB Movie Reviews using LSTM with TensorFlow
This project implements a sentiment analysis model using an LSTM (Long Short-Term Memory) neural network to classify movie reviews from the popular IMDB dataset as positive or negative.

Project Overview
The goal is to build a deep learning model that can accurately predict the sentiment of movie reviews by analyzing the sequence of words in the text. This project uses TensorFlow 2.x and Keras to build and train the model.

Key Features
Dataset: Uses the IMDB movie review dataset provided by TensorFlow/Keras, which contains 50,000 labeled movie reviews (positive or negative).

Data Preprocessing: Reviews are converted into sequences of integers representing words, padded to a fixed length of 300 tokens to ensure uniform input size.

Model Architecture:

An embedding layer transforms word indices into dense vectors.

Two dropout layers to reduce overfitting.

An LSTM layer with 64 units to capture sequential dependencies.

A flattening layer followed by a dense layer with sigmoid activation for binary classification.

Training: Includes early stopping and model checkpoint callbacks to prevent overfitting and save the best model.

Evaluation: Model performance is evaluated on a test set with accuracy, loss, classification report, and confusion matrix visualization.

Reproducibility: Random seeds are set for consistent results.

How to Use
Clone this repository.

Run the notebook or script in a Python environment with TensorFlow installed.

Optionally mount Google Drive to save models and load datasets.

Train the model and observe training/validation performance.

Evaluate on the test data and visualize results.

Dependencies
TensorFlow 2.x

NumPy

Pandas

Matplotlib

Seaborn

Scikit-learn

Potential Improvements
Experiment with different neural network architectures and hyperparameters.

Use pretrained word embeddings such as GloVe or Word2Vec.

Apply more advanced NLP preprocessing techniques.

Deploy the trained model as a web service or API.

